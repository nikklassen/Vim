set nocompatible

execute pathogen#infect()
call pathogen#helptags()

filetype indent plugin on

" Enable syntax highlighting
syntax enable

" Better command-line completion
set wildmenu

" Show partial commands in the last line of the screen
set showcmd

" Search commands
set hlsearch
set incsearch
set ignorecase
set smartcase

" Allow backspacing over autoindent, line breaks and start of insert action
set backspace=indent,eol,start

" When opening a new line and no filetype-specific indenting is enabled, keep
" the same indent as the line you're currently on. Useful for READMEs, etc.
set autoindent

" Stop certain movements from always going to the first character of a line.
" While this behaviour deviates from that of Vi, it does what most users
" coming from other editors would expect.
set nostartofline

" Always display the status line, even if only one window is displayed
set laststatus=2

" Instead of failing a command because of unsaved changes, instead raise a
" dialogue asking if you wish to save changed files.
set confirm

" Set the command window height to 2 lines, to avoid many cases of having to
" "press <Enter> to continue"
set cmdheight=2

" Display line numbers on the left
set number

"------------------------------------------------------------
" Indentation options
"------------------------------------------------------------
set shiftwidth=4
set softtabstop=4
set tabstop=2
" set shiftwidth=2
" set softtabstop=2
" set tabstop=2

set expandtab

"------------------------------------------------------------
" Mappings 
"------------------------------------------------------------
map Y y$

" Map <C-L> (redraw screen) to also turn off search highlighting until the
" next search
nnoremap <C-L>      :nohl<CR><C-L>

map <C-/>           :TComment<CR>

nmap <leader><CR>   mrO<ESC>`r
imap <leader><CR>   <ESC>o

" Reindent whole file
nmap <leader>=      mrggVG=`r

" Delete a method (assuming { is on your current line)
nmap <leader>db     ^v$%d

" Replace word under cursor with last yanked
nmap <leader>r      viw"0p
" Replace Word under cursor
nmap <leader>R      viW"0p

nnoremap <space>    za

vnoremap <          <gv
vnoremap <leader><  <

vnoremap >          >gv
vnoremap <leader>>  >

nnoremap <Left>     gT
nnoremap <Right>    gt
nnoremap <Up>       :bprev<CR>
nnoremap <Down>     :bnext<CR>

nmap <leader>v      :tabe $MYVIMRC<CR>
nnoremap <leader>o  :CommandT<CR> 

" <A-K> Move current line up
nmap ˚              ddkP

" <A-J> Move current line down
nmap ∆              ddp

" Windows equivalents
nmap <m-k> ddkP
nmap <m-j> ddp

nnoremap <leader>q :wq<CR>

"------------------------------------------------------------
" View Settings
"------------------------------------------------------------

au BufWinLeave ?* mkview!
au BufWinEnter ?* silent loadview

" Hold onto marks for the last ten files
set viminfo='10

"------------------------------------------------------------
" Colour settings
"------------------------------------------------------------

hi Pmenu ctermbg=Blue
set background=dark
colorscheme solarized

"------------------------------------------------------------
" File type specific settings
"------------------------------------------------------------

" Since backslash is used so often with LaTeX remap
" it to something less often used
autocmd BufNewFile,BufRead *.tex let mapleader=","
let g:tex_flavor='latex'

au BufRead,BufNewFile *.thor setf ruby

function! RunRuby()
    wa
    !ruby %
endfunction

" Run ruby with <A-R>
au BufRead,BufNewFile *.rb nmap ® :call RunRuby()<CR>
au BufRead,BufNewFile *.rb set tags=tags,~/.rbenv/versions/2.0.0-p195/tags;

au BufWritePost .vimrc source $MYVIMRC

"------------------------------------------------------------
" Plug-in settings
"------------------------------------------------------------

if exists( "vsvim_useeditordefaults" )
    set vsvim_useeditordefaults
endif

let g:EasyMotion_leader_key = '<leader>'

let g:localvimrc_sandbox=0
let g:localvimrc_ask=0
